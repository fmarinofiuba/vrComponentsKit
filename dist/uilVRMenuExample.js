var g=Object.defineProperty;var v=(t,n,e)=>n in t?g(t,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[n]=e;var m=(t,n,e)=>v(t,typeof n!="symbol"?n+"":n,e);import{s as f,R as w,L as _,W as U,V as M,S as b,P as x,O as I,c as S}from"./VRButton.js";import{C as E,E as L}from"./ControllersManager.js";import{X as H}from"./XRTeleportMoveControl.js";import{V as R,c as C}from"./vrMenuTestScene.js";import{D as P}from"./uil.custom.module.js";import"./VrInteractivePanel.js";class T extends R{constructor(e,u,c){super(e,u,c);m(this,"_onPointerEvent",e=>{switch(e.type){case"pointerdown":this._vrUI.setMouse(e.data),this._vrUI.triggerMouseMove(),this._vrUI.triggerMouseDown();break;case"pointermove":this._vrUI.setMouse(e.data),this._vrUI.triggerMouseMove();break;case"pointerup":this._vrUI.triggerMouseUp();break;case"pointerupoutside":this._vrUI.reset(!0);break}});this._vrUI=new P({w:512,maxHeight:512,colors:{bg:"#FFF"},isCanvas:!0,parent:null})}createMap(){const e=this;this._vrUI.onDraw=function(){e._map?e._map.needsUpdate=!0:(e._map=new f(this.canvas),e._map.wrapS=w,e._map.wrapT=w,e._map.minFilter=_,e._map.needsUpdate=!0,e._frontMaterial.map=e._map,e._frontMaterial.needsUpdate=!0);const u=e._vrUI.zone.h,c=e._vrUI.forceHeight,h=e._vrUI.zone.w;e._updateAspectRatio(h,c,u)}}get ui(){return this._vrUI}}let i,a,r,y=new S,d,l,p,o,s={torusSpeed:1,cubeSpeed:1,lightHUE:.25};window.params=s;function W(){i=new U({antialias:!0}),i.setPixelRatio(window.devicePixelRatio),i.setSize(window.innerWidth,window.innerHeight),i.xr.addEventListener("sessionstart",function(n){}),i.xr.addEventListener("sessionend",function(n){}),i.xr.enabled=!0,document.body.appendChild(i.domElement),document.body.appendChild(M.createButton(i)),a=new b,r=new x(50,window.innerWidth/window.innerHeight,.1,1e4),r.position.set(1,3,5),a.add(r);const t=new I(r,i.domElement);t.target.set(0,1,0),t.update(),window.addEventListener("resize",k,!1)}function V(){d=new E(i.xr,a),d.addEventListener(L.ON_BUTTON_UP,t=>t.button=="ButtonX"?(p.toggleVisibility(),!1):!0),l=new H(i.xr,d,a),l.setTeleportSurfaces(o.floor.geometry),p=new T(a,d,{mode:"panel",debugLevel:1,panel:{width:1,inclination:30,distance:1.25,verticalOffset:-.5}})}function k(){r.aspect=window.innerWidth/window.innerHeight,r.updateProjectionMatrix(),i.setSize(window.innerWidth,window.innerHeight)}function z(){o=C(a)}function F(){let t=p.ui;t.add(s,"torusSpeed",{min:0,max:10}),t.add(s,"cubeSpeed",{min:0,max:10});let n=t.add("group",{name:"Light",bg:"#442222"});n.add(o.pointLight,"intensity",{min:0,max:5}),n.add(s,"lightHUE",{name:" light HUE",min:0,max:1}),n.open(),p.createMap()}function O(){i.setAnimationLoop(B)}function B(t){const n=y.getDelta();d.update(t,n),l.update(n),i.render(a,r),o&&(o.torus.rotation.y+=s.torusSpeed/100,o.cube.rotation.y-=s.cubeSpeed/100,o.pointLight.color.setHSL(s.lightHUE,1,.5))}W();z();V();F();O();
//# sourceMappingURL=uilVRMenuExample.js.map
