var W=Object.defineProperty;var R=(e,n,t)=>n in e?W(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t;var b=(e,n,t)=>R(e,typeof n!="symbol"?n+"":n,t);import{f as L,e as h,B as w,Q as V,W as N,V as z,S as A,P as H,O as D,b as M,M as C,C as Q,c as q}from"./VRButton.js";import{a as U,C as B,E as x}from"./ControllersManager.js";import{X as I}from"./XRTeleportMoveControl.js";import{c as F}from"./vrBasicTestScene.js";import{V as X,a as k,T as Z}from"./TeapotGeometry.js";import"./VrInteractivePanel.js";import"./HTMLMesh.js";const P={contactGrabbing:{enabled:!0,distanceThreshold:.03},remoteGrabbing:{enabled:!0},showHelpers:!0},O={ON_GRAB_START:"onGrabStart",ON_GRAB_END:"onGrabEnd"};class G extends U{constructor(t,i,d){super();b(this,"_options");b(this,"_controllersManager");b(this,"_targetObject");b(this,"_grabbingController");b(this,"_boundingBox");b(this,"_bboxHelper");b(this,"_targetState");b(this,"_scene");b(this,"_onSqueezeStart",t=>{if(!this._grabbingController){if(t.handedness,t.ray,this._options.contactGrabbing.enabled){let i=this._controllersManager.getController(t.handedness),d=i.getGrip();this._targetObject.updateMatrixWorld(),this._boundingBox=new w().setFromObject(this._targetObject,!0);let s=d.getWorldPosition(new h);if(this._boundingBox.distanceToPoint(s)<this._options.contactGrabbing.distanceThreshold)return this._grabbingController=i,this._grabbingController.attachObject(this._targetObject),this.dispatchEvent({type:O.ON_GRAB_START,controller:this._grabbingController,object:this._targetObject}),!1}if(this._options.remoteGrabbing.enabled){let i=this._controllersManager.getController(t.handedness);if(this._targetObject.updateMatrixWorld(),this._boundingBox=new w().setFromObject(this._targetObject,!0),t.ray.intersectBox(this._boundingBox,new h)){this._grabbingController=i;let s=this._targetObject.parent,r=this._targetObject.getWorldPosition(new h),o=this._targetObject.getWorldQuaternion(new V),l=this._targetObject.getWorldScale(new h);return s.remove(this._targetObject),this._scene.add(this._targetObject),this._targetObject.position.copy(r),this._targetObject.quaternion.copy(o),this._targetObject.scale.copy(l),this._targetState="flyToGrip",this.dispatchEvent({type:O.ON_GRAB_START,controller:this._grabbingController,object:this._targetObject}),!1}}}});b(this,"_onSqueezeEnd",t=>{this._grabbingController&&(this._grabbingController.detachObject(),this.dispatchEvent({type:O.ON_GRAB_END,controller:this._grabbingController,object:this._targetObject}),this._grabbingController=null)});if(this._scene=i,this._options=Object.assign({},P,d),this._controllersManager=B.instance,this._targetObject=t,!(t instanceof L))throw new Error("GrabbableVrObject: targetObject must be an instance of THREE.Object3D");(this._options.contactGrabbing.enabled||this._options.remoteGrabbing.enabled)&&(this._controllersManager.addEventListener(x.ON_SQUEEZE_START,this._onSqueezeStart.bind(this)),this._controllersManager.addEventListener(x.ON_SQUEEZE_END,this._onSqueezeEnd.bind(this)),this._controllersManager.addEventListener(x.ON_UPDATE,this._onUpdate.bind(this)))}_onUpdate(t){if(this._grabbingController&&this._targetState=="flyToGrip"){let d=this._grabbingController.getGrip().getWorldPosition(new h),s=this._targetObject.position,r=new h;r.subVectors(d,s),r.multiplyScalar(.5),this._targetObject.position.add(r),t.time,t.delta,this._targetObject.position.distanceTo(d)<.15&&(this._grabbingController.attachObject(this._targetObject),this._targetState="grabbed")}}_getControllerDistanceToBBox(t){let i=this._controllersManager.getController(t);if(!i)return null;let d=i.getGrip();this._targetObject.updateMatrixWorld(),this._boundingBox=new w().setFromObject(this._targetObject,!0);let s=d.getWorldPosition(new h);return this._boundingBox.distanceToPoint(s)}get distanceToRightController(){return this._getControllerDistanceToBBox("right")}}let a,c,g,Y=new q,f,j,S,m,p;const u=[16711680,65280,255,16776960,16711935,65535,10066329,6710886,13421772,16751001,10092441,10066431,16777113,16751103,10092543,0];function $(){a=new N({antialias:!0}),a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight),a.xr.addEventListener("sessionstart",function(n){}),a.xr.addEventListener("sessionend",function(n){T()}),a.xr.enabled=!0,document.body.appendChild(a.domElement),document.body.appendChild(z.createButton(a)),c=new A,g=new H(50,window.innerWidth/window.innerHeight,.1,1e4),g.position.set(0,3,5),c.add(g);const e=new D(g,a.domElement);e.target.set(0,1,0),e.update(),window.addEventListener("resize",T,!1)}function J(){f=new B(a.xr,c),j=new I(a.xr,f,c)}function T(){g.aspect=window.innerWidth/window.innerHeight,g.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight)}function K(){S=F(c);let e=new X(document.body,c,f,{debugLevel:1,size:4});e.createMap();let n=e.mesh;n.position.set(4,1,-3),n.rotation.y=-Math.PI/4,m=new k(c,f,{size:2}),m.mesh.position.set(0,1,-5),m.createMap(),j.setTeleportSurfaces(S.floor.geometry),tt()}function tt(){const e=new Z(.2);e.translate(0,.25,0);const n=new M({color:0,opacity:1});let t=new C(e,n);const i=new Q(1.5,1.5,.1,32),d=new M({color:13421772});p=new C(i,d),p.position.set(-2,.75,-2),c.add(p);let s=0;for(let r=0;r<Math.PI*2;r=r+Math.PI/4){let o=t.clone();o.material=t.material.clone(),o.material.color.setHex(u[Math.floor(Math.random()*u.length)]),o.name="teapot"+s,o.position.set(Math.cos(r),0,Math.sin(r)),o.rotateY(r),p.add(o);const l=Object.assign({},P,{remoteGrabbing:{enabled:!1}});let _=new G(o,c,l);_.addEventListener("onGrabStart",v),_.addEventListener("onGrabEnd",y),s++}for(let r=0;r<4;r++)for(let o=0;o<4;o++){let l=t.clone();l.material=t.material.clone(),l.material.color.setHex(u[Math.floor(Math.random()*u.length)]),l.name="teapot"+s,l.position.set(3+r,0,-2-o);let _=.5+Math.random()*.5;l.scale.set(_,_,_),l.rotation.y=Math.PI*2*Math.random(),c.add(l);let E=new G(l,c);E.addEventListener("onGrabStart",v),E.addEventListener("onGrabEnd",y),s++}}function v(e){e.object.material.emissive.setHex(10066329)}function y(e){e.object.material.emissive.setHex(0)}function et(){a.setAnimationLoop(nt)}function nt(e){const n=Y.getDelta();f.update(e,n),j.update(n),m.update(e,n),a.render(c,g),p.rotation.y+=n,e+=n}$();J();K();et();
//# sourceMappingURL=grabbableObjectsExample.js.map
