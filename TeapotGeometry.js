var y2=Object.defineProperty;var w2=(u,p,t)=>p in u?y2(u,p,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[p]=t;var Q=(u,p,t)=>w2(u,typeof p!="symbol"?p+"":p,t);import{V as p2}from"./VrInteractivePanel.js";import{H as m2}from"./HTMLMesh.js";import{g as x2,e as E,E as C2,h as b2,i as F,j as z,k as $}from"./VRButton.js";const g2={width:800,height:500};class E2 extends p2{constructor(t,e,o,c){super(e,o,c);Q(this,"_onPointerEvent",t=>{switch(t.type){case"pointerdown":t.type="mousedown",t.data.y=1-t.data.y,this._map.dispatchDOMEvent(t);break;case"pointermove":t.type="mousemove",t.data.y=1-t.data.y,this._map.dispatchDOMEvent(t);break;case"pointerup":t.type="mouseup",t.data.y=1-t.data.y,this._map.dispatchDOMEvent(t);break}});this.options={...g2,...c},this.domElement=t,this.consoleDiv=null,this.originalConsole={log:console.log,info:console.info,warn:console.warn,error:console.error,debug:console.debug,trace:console.trace},this.customConsoleStyles=`
            #vrConsole {
			
                
                position: absolute;
				bottom: 0;
				left: 0;
                border: 4px solid red;
                padding: 10px;
                overflow-y: scroll;
                font-family: monospace;
                font-size: 12px;
                background-color: #f4f4f4;
                color: #333;
                box-sizing: border-box;
                visibility: hidden;
                
                height: `+this.options.height+`px;
				width: `+this.options.width+`px;

            }
            .consoleLine {
                margin-bottom: 5px;
                white-space: pre-wrap;
                word-wrap: break-word;
            }
            .consola-log { color: #000; }
            .consola-info { color: #0000AA; }
            .consola-warn { color: #AA5500; }
            .consola-error { color: #AA0000; font-weight: bold; }
            .consola-debug { color: #555555; }
            .consola-trace { color: #777777; }
            .consoleLine span { white-space: pre; }
        `,this.init()}init(){this.addStyles(),this.createConsoleContainer(),this.interceptConsoleMethods()}addStyles(){const t=document.createElement("style");t.textContent=this.customConsoleStyles,document.head.appendChild(t)}createConsoleContainer(){this.consoleDiv=document.createElement("div"),this.consoleDiv.id="vrConsole",this.domElement?this.domElement.appendChild(this.consoleDiv):(document.body.appendChild(this.consoleDiv),console.warn("container is null. Console div added to body."))}formatConsoleArgument(t){if(typeof t=="object"&&t!==null)try{return JSON.stringify(t,null,2)}catch{return String(t)}return String(t)}processStyleDirectives(t){let e=document.createDocumentFragment(),o=/%c([^%]+?)%c(.*)/g,c=0,h;for(;(h=o.exec(t))!==null;){let w=t.substring(c,h.index);w&&e.appendChild(document.createTextNode(w));let k=h[1],T=h[2],V=document.createElement("span");V.textContent=k,V.style.cssText=T,e.appendChild(V),c=o.lastIndex}let y=t.substring(c);return y&&e.appendChild(document.createTextNode(y)),e}interceptConsole(t){this.originalConsole[t]=console[t],console[t]=(...e)=>{const o=document.createElement("div");o.className="consoleLine consola-"+t;const h=Array.from(e).map(this.formatConsoleArgument).join(" ");h.includes("%c")?o.appendChild(this.processStyleDirectives(h)):o.textContent=h,this.consoleDiv.appendChild(o),this.consoleDiv.scrollTop=this.consoleDiv.scrollHeight,this.originalConsole[t].apply(console,e)}}interceptConsoleMethods(){this.interceptConsole("log"),this.interceptConsole("info"),this.interceptConsole("warn"),this.interceptConsole("error"),this.interceptConsole("debug"),this.interceptConsole("trace")}createMap(){const t=new m2(this.consoleDiv);t.material,this._map=t.material.map;let e=this._map.image.height,o=this._map.image.width;this._frontMaterial=t.material,this._mesh.material=[this._backMaterial,this._frontMaterial],this._updateAspectRatio(o,e,this.consoleDiv.offsetHeight)}}const _2={width:200};class T2 extends p2{constructor(t,e,o={}){super(t,e,o);Q(this,"_onPointerEvent",t=>{});this._options={..._2,...o},this._variables=new Map,this._htmlContainer=document.createElement("div"),this._htmlContainer.id="vrVarsWatcher",this._htmlContainer.style.cssText=`
            position: absolute;
            bottom: 0;
            left: 0;           
            visibility: hidden;
        `,document.body.appendChild(this._htmlContainer),this._table=document.createElement("table"),this._table.style.cssText=`
            width: ${this._options.width}px;
            min-width: 100px;
            min-height: 100px;  
            border-collapse: collapse;
            background: #555555;
            font-family: 'Consolas', monospace;
            font-size: 10px;
            color: white;            
        `,this._htmlContainer.appendChild(this._table)}add(t,e){const c={name:t,getter:typeof e=="function"?e:()=>e};return this._variables.set(t,c),this.update(),c}remove(t){t&&t.name&&this._variables.delete(t.name)}_formatValue(t){return t instanceof x2?`x:${t.x.toFixed(2)} y:${t.y.toFixed(2)}`:t instanceof E?`x:${t.x.toFixed(2)} y:${t.y.toFixed(2)} z:${t.z.toFixed(2)}`:t instanceof C2?`x:${t.x.toFixed(2)} y:${t.y.toFixed(2)} z:${t.z.toFixed(2)}`:typeof t=="number"?t.toFixed(2):String(t)}update(t,e){this._table.innerHTML="";for(const[o,c]of this._variables){const h=this._table.insertRow(),y=h.insertCell();y.textContent=o,y.style.cssText="text-align: right; padding: 2px 8px; border-right: 1px solid #444; text-wrap:nowrap;";const w=h.insertCell();w.textContent=this._formatValue(c.getter()),w.style.cssText="text-align: left; padding: 2px 8px; text-wrap:nowrap"}}createMap(){const t=new m2(this._htmlContainer);t.material,this._map=t.material.map;let e=this._map.image.height,o=this._map.image.width;this._frontMaterial=t.material,this._mesh.material=[this._backMaterial,this._frontMaterial],this._updateAspectRatio(o,e,this._htmlContainer.offsetHeight)}}class V2 extends b2{constructor(p=50,t=10,e=!0,o=!0,c=!0,h=!0,y=!0){const w=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,3,16,17,18,7,19,20,21,11,22,23,24,15,25,26,27,18,28,29,30,21,31,32,33,24,34,35,36,27,37,38,39,30,40,41,0,33,42,43,4,36,44,45,8,39,46,47,12,12,13,14,15,48,49,50,51,52,53,54,55,56,57,58,59,15,25,26,27,51,60,61,62,55,63,64,65,59,66,67,68,27,37,38,39,62,69,70,71,65,72,73,74,68,75,76,77,39,46,47,12,71,78,79,48,74,80,81,52,77,82,83,56,56,57,58,59,84,85,86,87,88,89,90,91,92,93,94,95,59,66,67,68,87,96,97,98,91,99,100,101,95,102,103,104,68,75,76,77,98,105,106,107,101,108,109,110,104,111,112,113,77,82,83,56,107,114,115,84,110,116,117,88,113,118,119,92,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,123,136,137,120,127,138,139,124,131,140,141,128,135,142,143,132,132,133,134,135,144,145,146,147,148,149,150,151,68,152,153,154,135,142,143,132,147,155,156,144,151,157,158,148,154,159,160,68,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,164,177,178,161,168,179,180,165,172,181,182,169,176,183,184,173,173,174,175,176,185,186,187,188,189,190,191,192,193,194,195,196,176,183,184,173,188,197,198,185,192,199,200,189,196,201,202,193,203,203,203,203,204,205,206,207,208,208,208,208,209,210,211,212,203,203,203,203,207,213,214,215,208,208,208,208,212,216,217,218,203,203,203,203,215,219,220,221,208,208,208,208,218,222,223,224,203,203,203,203,221,225,226,204,208,208,208,208,224,227,228,209,209,210,211,212,229,230,231,232,233,234,235,236,237,238,239,240,212,216,217,218,232,241,242,243,236,244,245,246,240,247,248,249,218,222,223,224,243,250,251,252,246,253,254,255,249,256,257,258,224,227,228,209,252,259,260,229,255,261,262,233,258,263,264,237,265,265,265,265,266,267,268,269,270,271,272,273,92,119,118,113,265,265,265,265,269,274,275,276,273,277,278,279,113,112,111,104,265,265,265,265,276,280,281,282,279,283,284,285,104,103,102,95,265,265,265,265,282,286,287,266,285,288,289,270,95,94,93,92],k=[1.4,0,2.4,1.4,-.784,2.4,.784,-1.4,2.4,0,-1.4,2.4,1.3375,0,2.53125,1.3375,-.749,2.53125,.749,-1.3375,2.53125,0,-1.3375,2.53125,1.4375,0,2.53125,1.4375,-.805,2.53125,.805,-1.4375,2.53125,0,-1.4375,2.53125,1.5,0,2.4,1.5,-.84,2.4,.84,-1.5,2.4,0,-1.5,2.4,-.784,-1.4,2.4,-1.4,-.784,2.4,-1.4,0,2.4,-.749,-1.3375,2.53125,-1.3375,-.749,2.53125,-1.3375,0,2.53125,-.805,-1.4375,2.53125,-1.4375,-.805,2.53125,-1.4375,0,2.53125,-.84,-1.5,2.4,-1.5,-.84,2.4,-1.5,0,2.4,-1.4,.784,2.4,-.784,1.4,2.4,0,1.4,2.4,-1.3375,.749,2.53125,-.749,1.3375,2.53125,0,1.3375,2.53125,-1.4375,.805,2.53125,-.805,1.4375,2.53125,0,1.4375,2.53125,-1.5,.84,2.4,-.84,1.5,2.4,0,1.5,2.4,.784,1.4,2.4,1.4,.784,2.4,.749,1.3375,2.53125,1.3375,.749,2.53125,.805,1.4375,2.53125,1.4375,.805,2.53125,.84,1.5,2.4,1.5,.84,2.4,1.75,0,1.875,1.75,-.98,1.875,.98,-1.75,1.875,0,-1.75,1.875,2,0,1.35,2,-1.12,1.35,1.12,-2,1.35,0,-2,1.35,2,0,.9,2,-1.12,.9,1.12,-2,.9,0,-2,.9,-.98,-1.75,1.875,-1.75,-.98,1.875,-1.75,0,1.875,-1.12,-2,1.35,-2,-1.12,1.35,-2,0,1.35,-1.12,-2,.9,-2,-1.12,.9,-2,0,.9,-1.75,.98,1.875,-.98,1.75,1.875,0,1.75,1.875,-2,1.12,1.35,-1.12,2,1.35,0,2,1.35,-2,1.12,.9,-1.12,2,.9,0,2,.9,.98,1.75,1.875,1.75,.98,1.875,1.12,2,1.35,2,1.12,1.35,1.12,2,.9,2,1.12,.9,2,0,.45,2,-1.12,.45,1.12,-2,.45,0,-2,.45,1.5,0,.225,1.5,-.84,.225,.84,-1.5,.225,0,-1.5,.225,1.5,0,.15,1.5,-.84,.15,.84,-1.5,.15,0,-1.5,.15,-1.12,-2,.45,-2,-1.12,.45,-2,0,.45,-.84,-1.5,.225,-1.5,-.84,.225,-1.5,0,.225,-.84,-1.5,.15,-1.5,-.84,.15,-1.5,0,.15,-2,1.12,.45,-1.12,2,.45,0,2,.45,-1.5,.84,.225,-.84,1.5,.225,0,1.5,.225,-1.5,.84,.15,-.84,1.5,.15,0,1.5,.15,1.12,2,.45,2,1.12,.45,.84,1.5,.225,1.5,.84,.225,.84,1.5,.15,1.5,.84,.15,-1.6,0,2.025,-1.6,-.3,2.025,-1.5,-.3,2.25,-1.5,0,2.25,-2.3,0,2.025,-2.3,-.3,2.025,-2.5,-.3,2.25,-2.5,0,2.25,-2.7,0,2.025,-2.7,-.3,2.025,-3,-.3,2.25,-3,0,2.25,-2.7,0,1.8,-2.7,-.3,1.8,-3,-.3,1.8,-3,0,1.8,-1.5,.3,2.25,-1.6,.3,2.025,-2.5,.3,2.25,-2.3,.3,2.025,-3,.3,2.25,-2.7,.3,2.025,-3,.3,1.8,-2.7,.3,1.8,-2.7,0,1.575,-2.7,-.3,1.575,-3,-.3,1.35,-3,0,1.35,-2.5,0,1.125,-2.5,-.3,1.125,-2.65,-.3,.9375,-2.65,0,.9375,-2,-.3,.9,-1.9,-.3,.6,-1.9,0,.6,-3,.3,1.35,-2.7,.3,1.575,-2.65,.3,.9375,-2.5,.3,1.125,-1.9,.3,.6,-2,.3,.9,1.7,0,1.425,1.7,-.66,1.425,1.7,-.66,.6,1.7,0,.6,2.6,0,1.425,2.6,-.66,1.425,3.1,-.66,.825,3.1,0,.825,2.3,0,2.1,2.3,-.25,2.1,2.4,-.25,2.025,2.4,0,2.025,2.7,0,2.4,2.7,-.25,2.4,3.3,-.25,2.4,3.3,0,2.4,1.7,.66,.6,1.7,.66,1.425,3.1,.66,.825,2.6,.66,1.425,2.4,.25,2.025,2.3,.25,2.1,3.3,.25,2.4,2.7,.25,2.4,2.8,0,2.475,2.8,-.25,2.475,3.525,-.25,2.49375,3.525,0,2.49375,2.9,0,2.475,2.9,-.15,2.475,3.45,-.15,2.5125,3.45,0,2.5125,2.8,0,2.4,2.8,-.15,2.4,3.2,-.15,2.4,3.2,0,2.4,3.525,.25,2.49375,2.8,.25,2.475,3.45,.15,2.5125,2.9,.15,2.475,3.2,.15,2.4,2.8,.15,2.4,0,0,3.15,.8,0,3.15,.8,-.45,3.15,.45,-.8,3.15,0,-.8,3.15,0,0,2.85,.2,0,2.7,.2,-.112,2.7,.112,-.2,2.7,0,-.2,2.7,-.45,-.8,3.15,-.8,-.45,3.15,-.8,0,3.15,-.112,-.2,2.7,-.2,-.112,2.7,-.2,0,2.7,-.8,.45,3.15,-.45,.8,3.15,0,.8,3.15,-.2,.112,2.7,-.112,.2,2.7,0,.2,2.7,.45,.8,3.15,.8,.45,3.15,.112,.2,2.7,.2,.112,2.7,.4,0,2.55,.4,-.224,2.55,.224,-.4,2.55,0,-.4,2.55,1.3,0,2.55,1.3,-.728,2.55,.728,-1.3,2.55,0,-1.3,2.55,1.3,0,2.4,1.3,-.728,2.4,.728,-1.3,2.4,0,-1.3,2.4,-.224,-.4,2.55,-.4,-.224,2.55,-.4,0,2.55,-.728,-1.3,2.55,-1.3,-.728,2.55,-1.3,0,2.55,-.728,-1.3,2.4,-1.3,-.728,2.4,-1.3,0,2.4,-.4,.224,2.55,-.224,.4,2.55,0,.4,2.55,-1.3,.728,2.55,-.728,1.3,2.55,0,1.3,2.55,-1.3,.728,2.4,-.728,1.3,2.4,0,1.3,2.4,.224,.4,2.55,.4,.224,2.55,.728,1.3,2.55,1.3,.728,2.55,.728,1.3,2.4,1.3,.728,2.4,0,0,0,1.425,0,0,1.425,.798,0,.798,1.425,0,0,1.425,0,1.5,0,.075,1.5,.84,.075,.84,1.5,.075,0,1.5,.075,-.798,1.425,0,-1.425,.798,0,-1.425,0,0,-.84,1.5,.075,-1.5,.84,.075,-1.5,0,.075,-1.425,-.798,0,-.798,-1.425,0,0,-1.425,0,-1.5,-.84,.075,-.84,-1.5,.075,0,-1.5,.075,.798,-1.425,0,1.425,-.798,0,.84,-1.5,.075,1.5,-.84,.075];super(),t=Math.max(2,Math.floor(t));const T=1.3,H=3.15*(y?1:T)/2,P=p/H;let L=e?(8*t-4)*t:0;L+=o?(16*t-4)*t:0,L+=c?40*t*t:0;const x=new Uint32Array(L*3);let g=e?4:0;g+=o?8:0,g+=c?20:0,g*=(t+1)*(t+1);const n=new Float32Array(g*3),S=new Float32Array(g*3),O=new Float32Array(g*2),R=new F;R.set(-1,3,-3,1,3,-6,3,0,-3,3,0,0,1,0,0,0);const r=[],X=[],Y=[],I=[],N=[],v=[],C=[],Z=[],t2=[],A=new E;let f,j,B,m,W=0,J=0;const M=new E,e2=new F,o2=new F,U=new $,q=new $,n2=new $,s2=new $,i2=new E,r2=new E,a2=R.clone();a2.transpose();const l2=(a,s,i)=>!(n[a*3]===n[s*3]&&n[a*3+1]===n[s*3+1]&&n[a*3+2]===n[s*3+2]||n[a*3]===n[i*3]&&n[a*3+1]===n[i*3+1]&&n[a*3+2]===n[i*3+2]||n[s*3]===n[i*3]&&n[s*3+1]===n[i*3+1]&&n[s*3+2]===n[i*3+2]);for(let a=0;a<3;a++)v[a]=new F;const f2=c?0:20,u2=e?32:28,D=t+1;let c2=0,G=0,K=0,h2=0,_=0;for(let a=f2;a<u2;a++)if(o||a<20||a>=28){for(let s=0;s<3;s++){for(let i=0;i<4;i++)for(let l=0;l<4;l++)r[l*4+i]=k[w[a*16+i*4+l]*3+s],h&&a>=20&&a<28&&s!==2&&(r[l*4+i]*=1.077),!y&&s===2&&(r[l*4+i]*=T);e2.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15]),o2.multiplyMatrices(e2,R),v[s].multiplyMatrices(a2,o2)}for(let s=0;s<=t;s++){const i=s/t;for(let l=0;l<=t;l++){const b=l/t;for(m=4,j=B=1;m--;)X[m]=j,Y[m]=B,j*=i,B*=b,m===3?(I[m]=N[m]=0,W=J=1):(I[m]=W*(3-m),N[m]=J*(3-m),W*=i,J*=b);U.fromArray(X),q.fromArray(Y),n2.fromArray(I),s2.fromArray(N);for(let d=0;d<3;d++)f=U.clone(),f.applyMatrix4(v[d]),C[d]=f.dot(q),f=n2.clone(),f.applyMatrix4(v[d]),Z[d]=f.dot(q),f=U.clone(),f.applyMatrix4(v[d]),t2[d]=f.dot(s2);i2.fromArray(Z),r2.fromArray(t2),A.crossVectors(r2,i2),A.normalize(),C[0]===0&&C[1]===0?M.set(0,C[2]>H?1:-1,0):M.set(A.x,A.z,-A.y),n[G++]=P*C[0],n[G++]=P*(C[2]-H),n[G++]=-P*C[1],S[K++]=M.x,S[K++]=M.y,S[K++]=M.z,O[h2++]=1-b,O[h2++]=1-i}}for(let s=0;s<t;s++)for(let i=0;i<t;i++){const l=c2*D*D+s*D+i,b=l+1,d=b+D,d2=l+D;l2(l,b,d)&&(x[_++]=l,x[_++]=b,x[_++]=d),l2(l,d,d2)&&(x[_++]=l,x[_++]=d,x[_++]=d2)}c2++}this.setIndex(new z(x,1)),this.setAttribute("position",new z(n,3)),this.setAttribute("normal",new z(S,3)),this.setAttribute("uv",new z(O,2)),this.computeBoundingSphere()}}export{V2 as T,E2 as V,T2 as a};
//# sourceMappingURL=TeapotGeometry.js.map
